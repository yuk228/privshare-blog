generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  name      String    @db.VarChar(255)
  avatarUrl String?
  email     String    @unique
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
  comments  Comment[]

  @@map("users")
}

model Article {
  id          Int          @id @default(autoincrement())
  uuid        String       @unique @default(uuid())
  title       String       @db.VarChar(255)
  description String       @db.VarChar(255)
  body        String
  thumbnailUrl String      @db.VarChar(255)
  slug        String       @unique @db.VarChar(255)
  isPublished Boolean      @default(false)
  category    Category     @default(OTHER)
  authorId    Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  author      User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments    Comment[]

  @@index([isPublished])
  @@index([authorId])
  @@index([createdAt])
  @@index([isPublished, createdAt])
  @@map("articles")
}


model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(255)
  articleId Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([articleId])
  @@index([userId])
  @@index([createdAt])
  @@map("comments")
}

enum Role {
  OWNER
  ADMIN
  USER
}

enum Category {
  PRIVACY
  ENCRYPTION
  OTHER
}